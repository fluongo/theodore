function [ output_args ] = FlashingMouseFollow( ScreenNo )
%UNTITLED Summary of this function goes here
%   Function will run the mouse chase protocol that generates a flashing
%   mouse that you can then move around the screen at will..


playbackHz = 10;

% If you want to just play with a white bar that you move around..
moviedata = 0.5*ones(9,16,4000);

% Clear the workspace andg the screen
sca

% Here we call some default settings for setting up Psychtoolbox
PsychDefaultSetup(2);

% Get the screen numbers. This gives us a number for each of the screens
% attached to our computer.
screens = Screen('Screens');

% To draw we select the maximum of these numbers. So in a situation where we
% have two screens attached to our monitor we will draw to the external
% screen.

screenNumber = 2 %max(screens);

% Define black and white (white will be 1 and black 0). This is because
% in general luminace values are defined between 0 and 1 with 255 steps in
% between. All values in Psychtoolbox are defined between 0 and 1
white = WhiteIndex(screenNumber);
black = BlackIndex(screenNumber);

% Do a simply calculation to calculate the luminance value for grey. This
% will be half the luminace values for white
grey = white / 2;

% Open an on screen window using PsychImaging and color it grey.
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, 0.5);

% Use the below for a distortion correction
%PsychImaging('PrepareConfiguration');
%PsychImaging('AddTask', 'Allviews', 'GeometryCorrection', 'C:\Users\stimcomp2\AppData\Roaming\Psychtoolbox\GeometryCalibration\CSVCalibdata_2.mat');
%PsychImaging('AddTask', 'Allviews', 'GeometryCorrection', 'C:\Users\fluongo\AppData\Roaming\Psychtoolbox\GeometryCalibration\CSVCalibdata_0.mat');

% Standard window
color = 0.5; rect = []; pixelsize = []; numBuffers = []; stereomode = 0;
[window, windowRect] = PsychImaging('OpenWindow', screenNumber, color, rect, pixelsize, numBuffers, stereomode);
theX = round(windowRect(RectRight) / 2);
theY = round(windowRect(RectBottom) / 2);
% Give time to go to grey screen

all_textures = PTBprepTextures(moviedata, window);

t =  Screen('Flip', window); % Get flip time
filtMode = 0; % Nearest interpolation
% Stuff for setting mouse...
SetMouse(theX,theY,screenNumber);
HideCursor;

% Create a single gaussian transparency mask and store it to a texture:
texsize = 50;
mask=ones(texsize, texsize) * 1;

masktex1=Screen('MakeTexture', window, mask);
masktex2=Screen('MakeTexture', window, mask-1);

for i = 1 :size(moviedata, 3)
	% On each iteration simply draw it with a gaussian mask centere on a
	% new cursor position
	
	% myrect must be redfined using the mouse position at each frame
	[mx, my, buttons]=GetMouse(screenNumber);
	
	Screen('DrawTexture', window, all_textures(i), [], windowRect, [], filtMode);
	% Code below will animate it to flashing
	if mod(i,2) == 0
		Screen('DrawTexture', window, masktex1, [], [mx-texsize my-texsize mx+texsize my+texsize]);
	else
		Screen('DrawTexture', window, masktex2, [], [mx-texsize my-texsize mx+texsize my+texsize]);
	end
	
	t = Screen('Flip', window, t+1/playbackHz);
	if KbCheck
		break;
	end;
end

% Clear the screen/close ports
Screen('CloseAll');


end

